# Generated by Django 5.1.8 on 2025-07-16 03:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CoupleProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_1_name', models.CharField(help_text="First partner's name", max_length=100)),
                ('partner_2_name', models.CharField(help_text="Second partner's name", max_length=100)),
                ('wedding_date', models.DateField(blank=True, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=200)),
                ('venue_location', models.CharField(blank=True, help_text='City, State', max_length=200)),
                ('couple_photo', models.ImageField(blank=True, null=True, upload_to='couple_photos/')),
                ('venue_photo', models.ImageField(blank=True, null=True, upload_to='venue_photos/')),
                ('couple_story', models.TextField(blank=True, help_text='Tell your love story')),
                ('share_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_public', models.BooleanField(default=False, help_text='Make this profile publicly accessible')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='couple_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Couple Profile',
                'verbose_name_plural': 'Couple Profiles',
            },
        ),
        migrations.CreateModel(
            name='RegistryLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registry_type', models.CharField(choices=[('amazon', 'Amazon'), ('target', 'Target'), ('bed_bath_beyond', 'Bed Bath & Beyond'), ('williams_sonoma', 'Williams Sonoma'), ('crate_barrel', 'Crate & Barrel'), ('pottery_barn', 'Pottery Barn'), ('macy', "Macy's"), ('zola', 'Zola'), ('the_knot', 'The Knot'), ('other', 'Other')], max_length=30)),
                ('registry_name', models.CharField(blank=True, help_text="Custom registry name if 'Other'", max_length=100)),
                ('original_url', models.URLField(help_text='Original registry URL')),
                ('affiliate_url', models.URLField(blank=True, help_text='Our affiliate URL (auto-generated if possible)')),
                ('display_name', models.CharField(blank=True, help_text='Display name for the registry', max_length=100)),
                ('description', models.TextField(blank=True, help_text="Description of what's on this registry")),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('couple_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registry_links', to='wedding_shopping.coupleprofile')),
            ],
            options={
                'ordering': ['registry_type', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='WeddingPhotoCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_name', models.CharField(default='Our Wedding Venue Transformations', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the photo collection')),
                ('studio_collection_id', models.IntegerField(blank=True, help_text='ID of the studio collection to display', null=True)),
                ('is_featured', models.BooleanField(default=True, help_text='Show this collection prominently')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('couple_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_collections', to='wedding_shopping.coupleprofile')),
            ],
            options={
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('tiktok', 'TikTok'), ('website', 'Website'), ('other', 'Other')], max_length=20)),
                ('platform_name', models.CharField(blank=True, help_text="Custom platform name if 'Other'", max_length=50)),
                ('url', models.URLField()),
                ('display_name', models.CharField(blank=True, help_text='Display name (e.g., @username)', max_length=100)),
                ('couple_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='wedding_shopping.coupleprofile')),
            ],
            options={
                'unique_together': {('couple_profile', 'platform', 'url')},
            },
        ),
    ]
