# Generated by Django 5.1.8 on 2025-07-01 20:50

import django.db.models.deletion
import image_processing.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageProcessingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('wedding_theme', models.CharField(blank=True, choices=[('rustic', 'Rustic Barn'), ('modern', 'Modern Elegant'), ('vintage', 'Vintage Romance'), ('bohemian', 'Bohemian Chic'), ('classic', 'Classic Traditional'), ('garden', 'Garden Party'), ('beach', 'Beach Paradise'), ('industrial', 'Industrial Chic')], max_length=20, null=True)),
                ('space_type', models.CharField(blank=True, choices=[('indoor_ceremony', 'Indoor Ceremony'), ('outdoor_ceremony', 'Outdoor Ceremony'), ('reception_hall', 'Reception Hall'), ('garden', 'Garden/Outdoor'), ('beach', 'Beach'), ('barn', 'Barn'), ('ballroom', 'Ballroom'), ('rooftop', 'Rooftop')], max_length=20, null=True)),
                ('generated_prompt', models.TextField(blank=True, help_text='Generated AI prompt for this job', null=True)),
                ('negative_prompt', models.TextField(blank=True, help_text='Negative prompt to avoid unwanted elements', null=True)),
                ('cfg_scale', models.FloatField(default=7.0, help_text='How strictly the diffusion process adheres to the prompt text')),
                ('steps', models.IntegerField(default=50, help_text='Number of diffusion steps to run')),
                ('seed', models.BigIntegerField(blank=True, help_text='Random noise seed for generation', null=True)),
                ('aspect_ratio', models.CharField(default='16:9', help_text='Aspect ratio for output image', max_length=10)),
                ('strength', models.FloatField(default=0.35, help_text='How much the input image influences the output (0.0-1.0)')),
                ('output_format', models.CharField(default='png', help_text='Output image format', max_length=10)),
                ('additional_details', models.TextField(blank=True, help_text='Additional user-specified details', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False, help_text='Allow public viewing of this collection')),
                ('is_default', models.BooleanField(default=False, help_text='Default collection for saved images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProcessedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processed_image', models.ImageField(upload_to=image_processing.models.processed_image_upload_path)),
                ('file_size', models.PositiveIntegerField(help_text='Size in bytes')),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('is_saved', models.BooleanField(default=False, help_text='Whether user has chosen to save this image')),
                ('saved_at', models.DateTimeField(blank=True, help_text='When the user saved this image', null=True)),
                ('stability_seed', models.BigIntegerField(blank=True, null=True)),
                ('finish_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processing_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_images', to='image_processing.imageprocessingjob')),
            ],
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to=image_processing.models.user_image_upload_path)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=image_processing.models.user_image_upload_path)),
                ('file_size', models.PositiveIntegerField(help_text='Size in bytes')),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='imageprocessingjob',
            name='user_image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to='image_processing.userimage'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('processed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='image_processing.processedimage')),
                ('user_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='image_processing.userimage')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'processed_image'), ('user', 'user_image')},
            },
        ),
        migrations.CreateModel(
            name='CollectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this image', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order within collection')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='image_processing.collection')),
                ('processed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='image_processing.processedimage')),
                ('user_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='image_processing.userimage')),
            ],
            options={
                'ordering': ['order', '-added_at'],
                'unique_together': {('collection', 'processed_image'), ('collection', 'user_image')},
            },
        ),
    ]
